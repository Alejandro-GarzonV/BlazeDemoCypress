/// <reference types="node" />
import type { BuildOptions, BuildResult } from "esbuild";
export interface CypressFileObject {
    filePath: string;
    outputPath: string;
    shouldWatch: boolean;
}
export declare type CypressPlugin = (file: CypressFileObject & NodeJS.EventEmitter) => Promise<string>;
export interface CypressPreprocessorOptions {
    additionalEntries?: string[];
}
export interface CallbackPreprocessorAdapterOptions {
    entryPoints: string[];
    outfile: string;
}
export interface CallbackPreprocessorAdapter {
    build: (options: CallbackPreprocessorAdapterOptions) => Promise<void>;
    options: CypressPreprocessorOptions;
}
export interface EsbuildPreprocessorAdapterOptions extends CypressPreprocessorOptions {
    esbuildOptions?: BuildOptions;
    esbuildBuildFunction?: (options: BuildOptions) => Promise<BuildResult>;
}
export declare function esbuildPreprocessorAdapter(options?: EsbuildPreprocessorAdapterOptions): CallbackPreprocessorAdapter;
export declare function cypressPreprocessor(adapter: CallbackPreprocessorAdapter): CypressPlugin;
export declare function cypressEsbuildPreprocessor(options?: EsbuildPreprocessorAdapterOptions): CypressPlugin;
