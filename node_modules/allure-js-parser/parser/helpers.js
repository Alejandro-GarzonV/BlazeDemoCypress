"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getParentsArray = exports.getSummary = exports.getRootSuite = void 0;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function isContainer(obj) {
    return !obj.fullName;
}
/**
 * Get root container
 * @param node - test or container
 */
const getRootSuite = (node) => {
    if (node === null || node === void 0 ? void 0 : node.parent) {
        return (0, exports.getRootSuite)(node.parent);
    }
    if (node && !isContainer(node)) {
        return undefined;
    }
    return node;
};
exports.getRootSuite = getRootSuite;
const getSummary = (res, filter) => {
    return res.reduce((acc, curr) => {
        if ((!filter && curr.status) || (filter && filter(curr) && curr.status)) {
            acc[`${curr.status}`]++;
        }
        return acc;
    }, { passed: 0, failed: 0, skipped: 0, broken: 0, unknown: 0 });
};
exports.getSummary = getSummary;
/**
 * Get parents into array, first - closes parent of the test
 * @param node - test or container
 * @param res - results
 */
const getParentsArray = (node, res = []) => {
    if (node === null || node === void 0 ? void 0 : node.parent) {
        res.push(node.parent);
        return (0, exports.getParentsArray)(node.parent, res);
    }
    if (node && !isContainer(node)) {
        return res;
    }
    return res;
};
exports.getParentsArray = getParentsArray;
