import { GrepTagObject } from '../common/types';
export declare const uniqTags: (arr: GrepTagObject[]) => GrepTagObject[];
export declare const parseInlineTags: (title: string) => GrepTagObject[];
export declare const removeTagsFromTitle: (str: string) => string;
export declare const encodeTagInfo: (str: string) => string;
export declare const decodeTagInfo: (str: string) => string;
export declare const parseOneTag: (tg: string) => GrepTagObject;
export declare const parseTags: (str: string) => GrepTagObject[];
/**
 * Helper function to create tag with info, returns string
 * @param name tag name ex 'my'
 * @param info params array  ex
 * tag('@my', 'Issue1'); // creates '@my("Issue1")'
 *
 * info then can be used in scope of test
 * @example
 *
 * it('test', { tags: [ tag('issue', 'example of info') ] }, function () {
 *   const infoForIssue = this.test?.tags?.find(t => t?.tag === 'issue')?.info ?? '';
 *   cy.log(`${infoForIssue}`);
 * });
 */
export declare const tag: (name: string, ...info: string[]) => string;
